SET ThousandSep=' ';
SET DecimalSep=',';
SET MoneyThousandSep=' ';
SET MoneyDecimalSep=',';
SET MoneyFormat='# ##0,00 kr;-# ##0,00 kr';
SET TimeFormat='hh:mm:ss';
SET DateFormat='YYYY-MM-DD';
SET TimestampFormat='YYYY-MM-DD hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='sv-SE';
SET CreateSearchIndexOnReload=1;
SET MonthNames='jan.;feb.;mars;apr.;maj;juni;juli;aug.;sep.;okt.;nov.;dec.';
SET LongMonthNames='januari;februari;mars;april;maj;juni;juli;augusti;september;oktober;november;december';
SET DayNames='mån;tis;ons;tors;fre;lör;sön';
SET LongDayNames='måndag;tisdag;onsdag;torsdag;fredag;lördag;söndag';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

Characters:
Load Chr(RecNo()+Ord('A')-1) as Alpha, RecNo() as Num autogenerate 26;
 
ASCII:
Load 
 if(RecNo()>=65 and RecNo()<=90,RecNo()-64) as Num,
 Chr(RecNo()) as AsciiAlpha, 
 RecNo() as AsciiNum
autogenerate 255
 Where (RecNo()>=32 and RecNo()<=126) or RecNo()>=160 ;
 
Transactions:
Load
 TransLineID, 
 TransID,
 mod(TransID,26)+1 as Num,
 Pick(Ceil(3*Rand1),'A','B','C') as Dim1,
 Pick(Ceil(6*Rand1),'a','b','c','d','e','f') as Dim2,
 Pick(Ceil(3*Rand()),'X','Y','Z') as Dim3,
 Round(1000*Rand()*Rand()*Rand1) as Expression1,
 Round(  10*Rand()*Rand()*Rand1) as Expression2,
 Round(Rand()*Rand1,0.00001) as Expression3,
 Round(9*Rand())&Round(9*Rand())&Round(9*Rand())&Round(9*Rand())&Round(9*Rand())&Round(9*Rand()) as CardNbr;
Load 
 Rand() as Rand1,
 IterNo() as TransLineID,
 RecNo() as TransID
Autogenerate 100
 While Rand()<=0.5 or IterNo()=1;

 Comment Field Dim1 With "This is a field comment";
 
 
 //AES test
 TimeLog:
    LOAD Now() as LogTime, 'StartAESEnc' as LogStatus AUTOGENERATE(1);

 AESTransactionsSSE:
 Load 
 Dim1 as SSEDim1,
 Dim2 as SSEDim2,
 Dim3 as SSEDim3,
 secSSE.HelloWorld(Dim1) as HW,
 secSSE.AESEncryptData(Dim1) as AESEncDim1
 resident Transactions;
 
TimeLog:
    LOAD Now() as LogTime, 'StopAESEnc' as LogStatus AUTOGENERATE(1);
 
 TimeLog:
    LOAD Now() as LogTime, 'StartAESDec' as LogStatus AUTOGENERATE(1);

 AESTransactionSSEDecrypt:
 Load
 AESEncDim1 as EncTmpDim1,
 secSSE.AESDecryptData(AESEncDim1) as AESDim1Decrypted,
 SSEDim1 as OrgDim1
 resident AESTransactionsSSE;

  TimeLog:
    LOAD Now() as LogTime, 'StopAESDec' as LogStatus AUTOGENERATE(1);

 
 //FPE

  TimeLog:
    LOAD Now() as LogTime, 'StartFPEEnc' as LogStatus AUTOGENERATE(1);

 FPETransactionsSSE:
 Load 
 CardNbr as FPECardNbr,
 secSSE.FPEEncryptData(CardNbr) as FPEEncCardNbr
 resident Transactions;
 
  TimeLog:
    LOAD Now() as LogTime, 'StopFPEEnc' as LogStatus AUTOGENERATE(1);

 TimeLog:
    LOAD Now() as LogTime, 'StartFPEDec' as LogStatus AUTOGENERATE(1);

 
 FPETransactionSSEDecrypt:
 Load
 FPEEncCardNbr,
 secSSE.FPEDecryptData(FPEEncCardNbr) as FPECardNbrDecrypted,
 FPECardNbr as OrgCardNbr
 resident FPETransactionsSSE;

  TimeLog:
    LOAD Now() as LogTime, 'StopFPEDec' as LogStatus AUTOGENERATE(1);

 
 //Multi-row test AES test
  TimeLog:
    LOAD Now() as LogTime, 'StartAESEncMulti' as LogStatus AUTOGENERATE(1);

 AESMultirowTransactionSSE:
 Load
 Field1 as SSEMDim1 
 Extension secSSE.AESEncryptData(Transactions{Dim1});

 TimeLog:
    LOAD Now() as LogTime, 'StopAESEncMulti' as LogStatus AUTOGENERATE(1);

TimeLog:
    LOAD Now() as LogTime, 'StartAESDecMulti' as LogStatus AUTOGENERATE(1);

 AESMultirowTransactionSSEDecrypt:
 Load
 Field1 as SSEMDim1Decrypted 
 Extension secSSE.AESDecryptData(AESMultirowTransactionSSE{SSEMDim1});

 TimeLog:
    LOAD Now() as LogTime, 'StartAESDecMulti' as LogStatus AUTOGENERATE(1);

 
 //Multi-row test FPE
TimeLog:
    LOAD Now() as LogTime, 'StartFPEEncMulti' as LogStatus AUTOGENERATE(1);


 FPEMultirowTransactionSSE:
 Load
 Field1 as SSEMFPECardNbr, 
 Extension secSSE.FPEEncryptData(Transactions{CardNbr});

 TimeLog:
    LOAD Now() as LogTime, 'StopFPEEncMulti' as LogStatus AUTOGENERATE(1);


TimeLog:
    LOAD Now() as LogTime, 'StartFPEDecMulti' as LogStatus AUTOGENERATE(1);


 FPEMultirowTransactionSSEDecrypt:
 Load 
 Field1 as SSEMFPECardNbrDecrypted 
 Extension secSSE.FPEDecryptData(FPEMultirowTransactionSSE{SSEMFPECardNbr});
 
 TimeLog:
    LOAD Now() as LogTime, 'StopFPEDecMulti' as LogStatus AUTOGENERATE(1);
